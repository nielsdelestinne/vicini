name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.artifact-upload-step.outputs.artifact-id }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm run install:all --legacy-peer-deps

      - name: Build frontend
        run: npm run build:frontend

      - name: Build backend
        run: npm run build:backend

      # - name: Run tests
      #   run: |
      #     cd backend
      #     npm test

      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r backend/dist deployment/
          cp -r backend/package.json deployment/
          cp -r frontend/dist/vicini-frontend deployment/public
          cd deployment && npm install --production
          cd .. && zip -r deployment.zip deployment

      - name: Upload artifact
        id: artifact-upload-step
        uses: actions/upload-artifact@v4
        with:
          name: deployment-package
          path: deployment.zip

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Output artifact ID
        run: echo "Artifact ID from previous job is ${{ needs.build.outputs.output1 }}"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: deployment-package
          path: .

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: "vicini-app"
          package: "deployment.zip"
